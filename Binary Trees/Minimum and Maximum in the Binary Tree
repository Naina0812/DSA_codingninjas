For a given a Binary Tree of type integer, find and return the minimum and the maximum data values.

Return the output as an object of Pair class, which is already created.

Note:
All the node data will be unique and hence there will always exist a minimum and maximum node data.
Detailed explanation ( Input/output format, Notes, Images )
Constraints:
2 <= N <= 10^5
Where N is the total number of nodes in the binary tree.

Time Limit: 1 sec
Sample Input 1:
8 3 10 1 6 -1 14 -1 -1 4 7 13 -1 -1 -1 -1 -1 -1 -1
Sample Output 1:
1 14
Sample Input 2:
10 20 60 -1 -1 3 50 -1 -1 -1 -1 
Sample Output 2:
3 60

//code...............................

#include<climits>
pair<int, int> getMinAndMax(BinaryTreeNode<int> *root) {
	// Write your code here
	pair<int ,int>ans;
	int min=INT_MAX;
	int max=INT_MIN;
	if(root==NULL){
		ans.first=0;
		ans.second=0;
		return ans;
	}
	queue<BinaryTreeNode<int> *>pendingNodes;
	pendingNodes.push(root);
	while(pendingNodes.size()!=0){
		BinaryTreeNode<int> *front=pendingNodes.front();
		pendingNodes.pop();
		if(min>front->data){
			min=front->data;
		}
		if(max<front->data){
			max=front->data;
		}
		if(front->left!=NULL){
			pendingNodes.push(front->left);
		}
		if(front->right!=NULL){
			pendingNodes.push(front->right);
		}
	}
	ans.first=min;
	ans.second=max;
	return ans;
	
}