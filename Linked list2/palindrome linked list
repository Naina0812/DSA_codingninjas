You have been given a head to a singly linked list of integers. Write a function check to whether the list given is a 'Palindrome' or not.

Detailed explanation ( Input/output format, Notes, Images )
 Constraints :
1 <= t <= 10^2
0 <= M <= 10^5
Time Limit: 1sec

Where 'M' is the size of the singly linked list.
Sample Input 1 :
1
9 2 3 3 2 9 -1
Sample Output 1 :
true
Sample Input 2 :
2
0 2 3 2 5 -1
-1
Sample Output 2 :
false
true
Explanation for the Sample Input 2 :
For the first query, it is pretty intuitive that the the given list is not a palindrome, hence the output is 'false'.

For the second query, the list is empty. An empty list is always a palindrome , hence the output is 'true'.

//code.........................
/****************************************************************
 
    Following is the class structure of the Node class:

        class Node
        {
        public:
	        int data;
	        Node *next;
	        Node(int data)
	        {
		        this->data = data;
		        this->next = NULL;
	        }
        };

*****************************************************************/
#include<bits/stdc++.h>
bool isPalindrome(Node *head)
{
    //Write your code here
	Node *temp=head;
  vector<int>ans ;
  int count =0;
  while(temp!=NULL){
      ans.push_back(temp->data);
      count++;
      temp=temp->next;
  }
   temp=head;
   int flag=1;
   while(temp!=NULL && count>=0){
       if(temp->data==ans[count-1])
       {
           flag=1;
           temp=temp->next;
           count--;
       } else {
           return 0;
       }
   }
   return 1;
}